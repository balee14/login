buildscript {

    ext {
        springBootVersion = '1.5.9.RELEASE'
        gradleScriptDir = "${project.getRootDir()}/gradle"
    }

    def profile = project.hasProperty('profile') ? project.getProperty('profile') : 'local'

    //logger.quiet('###### Loading Configuration For Profile Active : [${profile}] ######')

    def configFile = file("${gradleScriptDir}/environment.groovy")
    def parsedConfig = new ConfigSlurper(profile).parse(configFile.toURI().toURL())

    ext.env = parsedConfig

    //logger.quiet('###### Artifactory Host URL : [${env.artifactory.host.url}] ######')

	repositories {
		mavenCentral()
	}
	dependencies {
		classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.4.RELEASE"
	}
}

apply from: "${gradleScriptDir}/default.gradle"

project('application:login-server') {

    war {
        baseName = 'login'
    }

    dependencies {
        compile('org.springframework.boot:spring-boot-starter-data-jpa')
        compile('org.springframework.boot:spring-boot-starter-data-rest')
        compile('org.springframework.boot:spring-boot-starter-security')
        compile('org.springframework.boot:spring-boot-starter-thymeleaf')
        compile('org.springframework.boot:spring-boot-starter-web')

        compile('org.springframework.security.oauth:spring-security-oauth2')
        compile('org.springframework.security:spring-security-jwt')
        compile('org.thymeleaf.extras:thymeleaf-extras-springsecurity4')
        compile('org.springframework.data:spring-data-rest-hal-browser')

        compile('org.mariadb.jdbc:mariadb-java-client:2.2.2')
        compile('com.zaxxer:HikariCP:2.7.8')

        compile('org.apache.commons:commons-lang3:3.7')
        compile('commons-io:commons-io:2.6')
        compile('com.jayway.restassured:rest-assured:2.9.0')

        compile('net.logstash.logback:logstash-logback-encoder:4.11')
        //compile('net.sourceforge.nekohtml:nekohtml')

        // 개발중에만
        //compile('org.springframework.boot:spring-boot-devtools')

        //testCompile('org.springframework.boot:spring-boot-starter-test')
        //testCompile('org.springframework.security:spring-security-test')
        //testCompile('com.jayway.restassured:rest-assured:2.9.0')

        //외부 톰캣 사용시
        //providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
    }

}

project('application:api-server') {

    war {
        baseName = 'billing'
    }

    dependencies {
        compile('org.springframework.boot:spring-boot-starter-data-jpa')
        compile('org.springframework.boot:spring-boot-starter-data-rest')
        compile('org.springframework.boot:spring-boot-starter-security')
        compile('org.springframework.boot:spring-boot-starter-thymeleaf')
        compile('org.springframework.boot:spring-boot-starter-web')
        compile('org.springframework.boot:spring-boot-starter-mail')
        compile('org.springframework.boot:spring-boot-starter-batch')

        compile('org.thymeleaf.extras:thymeleaf-extras-springsecurity4')
        compile('org.springframework.security.oauth:spring-security-oauth2')
        compile('org.springframework.data:spring-data-rest-hal-browser')
        compile('org.springframework.security:spring-security-jwt')
        compile "org.springframework.kafka:spring-kafka:1.3.4.RELEASE"

        compile('org.mariadb.jdbc:mariadb-java-client:2.2.2')
        compile('com.zaxxer:HikariCP:2.7.8')

        compile('org.apache.commons:commons-lang3:3.7')
        compile('commons-io:commons-io:2.6')

        compile('com.jayway.restassured:rest-assured:2.9.0')
        compile('com.jayway.jsonpath:json-path:2.3.0')

        // lombok
        compile('net.logstash.logback:logstash-logback-encoder:4.11')

        // quartz
        compile group: 'org.quartz-scheduler', name: 'quartz', version: '2.3.0'
        // email
        compile group: 'javax.mail', name: 'mail', version: '1.4.7'
        // swagger
        compile('io.springfox:springfox-swagger2:2.8.0')
        compile('io.springfox:springfox-swagger-ui:2.8.0')
        // excel
        compile('org.apache.poi:poi-ooxml:3.17')

        compile('net.sourceforge.nekohtml:nekohtml')

        // 개발중에만
        //compile('org.springframework.boot:spring-boot-devtools')

        //testCompile('org.springframework.boot:spring-boot-starter-test')
        //testCompile('org.springframework.security:spring-security-test')
        //testCompile group: 'org.springframework.kafka', name: 'spring-kafka-test', version: '2.1.4.RELEASE'
        //testCompile('com.icegreen:greenmail:1.5.7')
        //testCompile('com.jayway.jsonpath:json-path:2.3.0')

        //외부 톰캣 사용시
        providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
        //내부 톰캣 사용시
        //compile('org.springframework.boot:spring-boot-starter-tomcat')
    }
}

bootRun {
    jvmArgs = ["-Djava.net.preferIPv4Stack=true"]
}